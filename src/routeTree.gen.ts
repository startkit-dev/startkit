/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteImport } from './routes/_main'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { ServerRoute as ApiPingServerRouteImport } from './routes/api/ping'

const rootServerRouteImport = createServerRootRoute()

const MainRoute = MainRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)
const ApiPingServerRoute = ApiPingServerRouteImport.update({
  id: '/api/ping',
  path: '/api/ping',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof MainIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof MainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_main': typeof MainRouteWithChildren
  '/_main/': typeof MainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/'
  id: '__root__' | '/_main' | '/_main/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainRoute: typeof MainRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/ping': typeof ApiPingServerRoute
}
export interface FileServerRoutesByTo {
  '/api/ping': typeof ApiPingServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/ping': typeof ApiPingServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/ping'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/ping'
  id: '__root__' | '/api/ping'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiPingServerRoute: typeof ApiPingServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/ping': {
      id: '/api/ping'
      path: '/api/ping'
      fullPath: '/api/ping'
      preLoaderRoute: typeof ApiPingServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface MainRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainIndexRoute: MainIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  MainRoute: MainRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiPingServerRoute: ApiPingServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
